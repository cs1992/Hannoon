package com.hannoon.study.action;

import javax.servlet.http.HttpSession;

import com.hannoon.study.model.StudyDto;



public class StudyAddAction {
	// 1. data get (request(subject제목, content내용, bcode게시판번호), session(이름,
			// 아이디, 이메일)
			// (db ( 글번호 ))
			// 2. logic ( service -> dao ) insert
			// 1의 data를 이용하여 Dto 만들기 service에 전송
			// 3. 2의 결과에 따라 view page 결정.
//			HttpSession session = request.getSession(); // session 생성
//			StudyDto memberDto = (StudyDto) session.getAttribute("loginInfo");
//			String path = "/index.jsp"; //원래는 login.jsp지만 없으므로 index
//			
//			if (StudyDto != null) { // 로그인을 했다면 - 하지마!! feat 빡구
//				int seq = CommonServiceImpl.getCommonService().getNextSeq(); // 글 번호 얻기 db에서
//				
//				StudyDto studyDto = new StudyDto();
//				studyDto.setSeq(seq); // 글번호 얻어오는 이유는 작성한 글 확인을 눌렀을 때, 작성한 글을 보려면 글 번호가 필요함
//				reboardDto.setId(memberDto.getId()); // session
//				reboardDto.setName(memberDto.getName()); // session
//				reboardDto.setEmail(memberDto.getEmail1() + "@" + memberDto.getEmail2()); // session
//				reboardDto.setSubject(request.getParameter("subject")); // parameter
//				reboardDto.setContent(request.getParameter("content")); // parameter
//				reboardDto.setBcode(NumberCheck.nullToZero(request.getParameter("bcode"))); // parameter
//				reboardDto.setRef(seq); // 새글일때는 ref(그룹번호)를 seq와 같게 설정.
//				
//				int cnt = ReBoardServiceImpl.getReboardService().writeArticle(reboardDto);
//				if (cnt != 0) {
//					// bcode, pg, key, word는 queryString으로 넘기고, 나머지는 request나 session에 받아서 넘기자
//					request.setAttribute("seq", seq +""); // 형변환하기 귀찮으니까... 귀찮으면 때려쳐!!!!!!
//					path = "reboard/writeOk.jsp"; // 주소는 대문자 소문자 구분함, 글번호 가져가야함 ( 작성한 글 확인 ), bcode, pg, key, word
//					
//				} else
//					path = "reboard/writeFail.jsp";
//			} 
//			return path;
//		}
}
